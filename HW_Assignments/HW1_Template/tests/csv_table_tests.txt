## TEST0 - This is the test to validate the data load into object with function t_load()******************** test_load_good ********************Created table = CSVDataTable: config data = {  "table_name": "batting",  "connect_info": {    "directory": "/Users/phanivalasa/Documents/Columbia/Databases/w4111-Databases/HW_Assignments/HW1_Template/Data/Baseball",    "file_name": "Batting.csv"  },  "key_columns": null,  "debug": true}Some Rows: =      playerID yearID stint teamID lgID    G   AB    R    H   2B  ...  RBI   SB   CS   BB   SO  IBB  HBP   SH   SF GIDP0   abercda01   1871     1    TRO   NA    1    4    0    0    0  ...    0    0    0    0    0                        01    addybo01   1871     1    RC1   NA   25  118   30   32    6  ...   13    8    1    4    0                        02   allisar01   1871     1    CL1   NA   29  137   28   40    4  ...   19    3    1    2    5                        13   allisdo01   1871     1    WS3   NA   27  133   28   44   10  ...   27    1    1    0    2                        04   ansonca01   1871     1    RC1   NA   25  120   29   39   11  ...   16    6    2    2    1                        05         ***    ***   ***    ***  ***  ***  ***  ***  ***  ***  ...  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***6         ***    ***   ***    ***  ***  ***  ***  ***  ***  ***  ...  ***  ***  ***  ***  ***  ***  ***  ***  ***  ***7   zieglbr01   2018     2    ARI   NL   29    0    0    0    0  ...    0    0    0    0    0    0    0    0    0    08   zimmebr01   2018     1    CLE   AL   34  106   14   24    5  ...    9    4    1    7   44    0    1    0    0    19   zimmejo02   2018     1    DET   AL   25    2    0    0    0  ...    0    0    0    0    2    0    0    0    0    010  zimmery01   2018     1    WAS   NL   85  288   33   76   21  ...   51    1    1   30   55    1    3    0    2   1011  zobribe01   2018     1    CHN   NL  139  455   67  139   28  ...   58    3    4   55   60    1    2    1    7    8[12 rows x 22 columns] This is the correct answer******************** end test_load_good ********************## TEST1: Test Case to validate find_my_template******************** test_find_by_template good ********************CSV Table Test1 (Find By Template ): Result =  [  {    "playerID": "barbech01",    "nameFirst": "Charlie",    "nameLast": "Barber",    "throws": "R",    "deathYear": "1910",    "deathMonth": "11"  },  {    "playerID": "bastich01",    "nameFirst": "Charlie",    "nameLast": "Bastian",    "throws": "R",    "deathYear": "1943",    "deathMonth": "11"  },  {    "playerID": "heardch01",    "nameFirst": "Charlie",    "nameLast": "Heard",    "throws": "R",    "deathYear": "1945",    "deathMonth": "2"  },  {    "playerID": "hilsech01",    "nameFirst": "Charlie",    "nameLast": "Hilsey",    "throws": "",    "deathYear": "1918",    "deathMonth": "10"  },  {    "playerID": "housech02",    "nameFirst": "Charlie",    "nameLast": "Householder",    "throws": "L",    "deathYear": "1913",    "deathMonth": "9"  },  {    "playerID": "nycech01",    "nameFirst": "Charlie",    "nameLast": "Nyce",    "throws": "",    "deathYear": "1908",    "deathMonth": "5"  }]Total Records: 6This is the correct answer******************** end test_find_by_template good ********************## TEST1b : Test Case to validate find_my_template; There are no desired fields set, so all the available columns should be displayed******************** test_find_by_template when but no desired fields mentioned ********************CSV Table Test1 (Find By Template ): Result =  [  {    "playerID": "barbech01",    "birthYear": "1854",    "birthMonth": "",    "birthDay": "",    "birthCountry": "USA",    "birthState": "PA",    "birthCity": "Philadelphia",    "deathYear": "1910",    "deathMonth": "11",    "deathDay": "23",    "deathCountry": "USA",    "deathState": "PA",    "deathCity": "Philadelphia",    "nameFirst": "Charlie",    "nameLast": "Barber",    "nameGiven": "Charles D.",    "weight": "148",    "height": "70",    "bats": "R",    "throws": "R",    "debut": "1884-04-17",    "finalGame": "1884-08-10",    "retroID": "barbc101",    "bbrefID": "barbech01"  },  {    "playerID": "bastich01",    "birthYear": "1858",    "birthMonth": "3",    "birthDay": "2",    "birthCountry": "USA",    "birthState": "PA",    "birthCity": "Philadelphia",    "deathYear": "1943",    "deathMonth": "11",    "deathDay": "10",    "deathCountry": "USA",    "deathState": "PA",    "deathCity": "Philadelphia",    "nameFirst": "Charlie",    "nameLast": "Bastian",    "nameGiven": "Charles A.",    "weight": "145",    "height": "66",    "bats": "R",    "throws": "R",    "debut": "1884-08-18",    "finalGame": "1891-08-22",    "retroID": "bastc101",    "bbrefID": "bastich01"  },  {    "playerID": "heardch01",    "birthYear": "1872",    "birthMonth": "1",    "birthDay": "30",    "birthCountry": "USA",    "birthState": "PA",    "birthCity": "Philadelphia",    "deathYear": "1945",    "deathMonth": "2",    "deathDay": "20",    "deathCountry": "USA",    "deathState": "PA",    "deathCity": "Philadelphia",    "nameFirst": "Charlie",    "nameLast": "Heard",    "nameGiven": "Charles",    "weight": "190",    "height": "74",    "bats": "R",    "throws": "R",    "debut": "1890-07-14",    "finalGame": "1890-08-30",    "retroID": "hearc101",    "bbrefID": "heardch01"  },  {    "playerID": "hilsech01",    "birthYear": "1864",    "birthMonth": "3",    "birthDay": "23",    "birthCountry": "USA",    "birthState": "PA",    "birthCity": "Philadelphia",    "deathYear": "1918",    "deathMonth": "10",    "deathDay": "31",    "deathCountry": "USA",    "deathState": "PA",    "deathCity": "Philadelphia",    "nameFirst": "Charlie",    "nameLast": "Hilsey",    "nameGiven": "Charles T.",    "weight": "180",    "height": "67",    "bats": "",    "throws": "",    "debut": "1883-09-27",    "finalGame": "1884-06-16",    "retroID": "hilsc101",    "bbrefID": "hilsech01"  },  {    "playerID": "housech02",    "birthYear": "1854",    "birthMonth": "2",    "birthDay": "8",    "birthCountry": "USA",    "birthState": "PA",    "birthCity": "Philadelphia",    "deathYear": "1913",    "deathMonth": "9",    "deathDay": "3",    "deathCountry": "USA",    "deathState": "PA",    "deathCity": "Philadelphia",    "nameFirst": "Charlie",    "nameLast": "Householder",    "nameGiven": "Charles W.",    "weight": "158",    "height": "71",    "bats": "L",    "throws": "L",    "debut": "1882-05-02",    "finalGame": "1884-10-15",    "retroID": "housc102",    "bbrefID": "housech02"  },  {    "playerID": "nycech01",    "birthYear": "1870",    "birthMonth": "7",    "birthDay": "1",    "birthCountry": "USA",    "birthState": "PA",    "birthCity": "Philadelphia",    "deathYear": "1908",    "deathMonth": "5",    "deathDay": "9",    "deathCountry": "USA",    "deathState": "PA",    "deathCity": "Philadelphia",    "nameFirst": "Charlie",    "nameLast": "Nyce",    "nameGiven": "Charles Reiff",    "weight": "160",    "height": "68",    "bats": "",    "throws": "",    "debut": "1895-05-28",    "finalGame": "1895-08-28",    "retroID": "nycec101",    "bbrefID": "nycech01"  }]Total Records: 6This is the correct answer; The output should have all the available columns******************** end test_find_by_template when but no desired fields mentioned ********************## TEST2 :Test Case to validate find_my_template with invalid keys in the template; check to see if the exception is raised******************** test_find_by_template invalid_names_in_template ********************CSV Test2: Exception in find_by_template =   Error - The keys in template do not exist in CSV table ; Template -  {  "birthCity1": "Philadelphia",  "deathCity": "Philadelphia",  "nameFirst": "Charlie"}This is the correct answer******************** end test_find_by_template invalid_names_in_template ********************## TEST2b :Test Case to validate find_my_template with invalid keys in the field_list; check to see if the exception is raised******************** test_find_by_template invalid_names_in_template ********************CSV Test2b: Exception in find_by_template =   Error - The elements of Field_list do not exist in CSV table ; Desired Fields -  ['playerID1', 'nameFirst', 'nameLast', 'throws', 'deathYear', 'deathMonth']This is the correct answer******************** end test_find_by_template invalid_names_in_template ********************## TEST 3 : Test Case to validate the data with primary key values; the return fields not mentioned so it should return everything******************** test_find_by_primary_key good but no mention of desired fields ********************CSV Table Test3 (Find By Primary Key - not mentioning the return columns): Result =  [  {    "playerID": "aardsda01",    "yearID": "2010",    "stint": "1",    "teamID": "SEA",    "lgID": "AL",    "G": "53",    "AB": "0",    "R": "0",    "H": "0",    "2B": "0",    "3B": "0",    "HR": "0",    "RBI": "0",    "SB": "0",    "CS": "0",    "BB": "0",    "SO": "0",    "IBB": "0",    "HBP": "0",    "SH": "0",    "SF": "0",    "GIDP": "0"  }]This is the correct answer******************** end test_find_by_primary_key good but no mention of desired fields ********************## TEST 3b: Test Case to validate the data with primary key values; the return fields mentioned******************** test_find_by_primary_key with desired fields ********************CSV Table Test3b (Find By Primary Key -  with the return columns): Result =  [  {    "playerID": "aardsda01",    "yearID": "2010",    "stint": "1",    "teamID": "SEA"  }]This is the correct answer******************** end test_find_by_primary_key with desired fields ********************## TEST 3c: Test Case to validate the data with primary key values; the values given do not exist in table; should return no rows******************** test_find_by_primary_key with no matching rows ********************CSV Table Test3c (Find By Primary Key -  with the return columns): Result =  []This is the correct answer******************** end test_find_by_primary_key with no matching rows ********************## TEST 4: Test Case to validate Inserts when the primary key doesn't exist in the table******************** test_inserts; primary key doesn't exist in the table already  ********************CSV Table Test4 (Insert Successful-  with no prior data for the primary keyThis is the correct answer******************** end test_inserts; primary key doesn't exist in the table already ********************## TEST 4b: Test Case to validate Inserts FAIL when the primary key already exists******************** test_inserts; primary key already exist; insert should FAIL  ********************CSV Test4b: Exception in insert =   Error - Primary key already existsThis is the correct answer******************** end test_inserts; primary key already exist; insert should FAIL ********************## TEST 5: Validate that the records are deleted correctly by delete_by_template method.******************** test_delete_by_template  ********************CSV Table Test5; Records Deleted :  9 Table Name - appearances Template - {  "playerID": "aardsda01"}CSV Table Test5: Result = Records not found after deletionThis is the correct answer******************** test_delete_by_template ********************## TEST 5: Validate that the records are deleted correctly by delete_by_template method. Template here has values that doesn't exist in table.******************** test_delete_by_template; with non-existing values in the table  ********************Delete : No matching records foundCSV Table Test5; Records Deleted :  0 Table Name - appearances Template - {  "playerID": "aardsda01X"}CSV Table Test5b: Result = Records not found after deletionThis is the correct answer******************** test_delete_by_template; with non-existing values in the table ********************## TEST 6: Validate that the records are deleted correctly by delete_by_key method.******************** delete_by_key ********************CSV Table Test6; Records Deleted :  1 Table Name - appearances key_fields - ['aardsda01', 'SEA', '2009']CSV Table Test6: Result = Records not found after deletionThis is the correct answer******************** test_delete_by_key ********************## TEST 7: Test Case to validate update by template******************** update_by_template ********************Template: {  "playerID": "aardsda01",  "teamID": "SEA"}New Values: {  "G_all": "100",  "G_batting": "9",  "G_defense": "100",  "G_p": "100"}Expected no. of records to update: 2CSV Test7 (Records before udpate_by_template =  [  {    "yearID": "2009",    "teamID": "SEA",    "lgID": "AL",    "playerID": "aardsda01",    "G_all": "73",    "GS": "0",    "G_batting": "3",    "G_defense": "73",    "G_p": "73",    "G_c": "0",    "G_1b": "0",    "G_2b": "0",    "G_3b": "0",    "G_ss": "0",    "G_lf": "0",    "G_cf": "0",    "G_rf": "0",    "G_of": "0",    "G_dh": "0",    "G_ph": "0",    "G_pr": "0"  },  {    "yearID": "2010",    "teamID": "SEA",    "lgID": "AL",    "playerID": "aardsda01",    "G_all": "53",    "GS": "0",    "G_batting": "4",    "G_defense": "53",    "G_p": "53",    "G_c": "0",    "G_1b": "0",    "G_2b": "0",    "G_3b": "0",    "G_ss": "0",    "G_lf": "0",    "G_cf": "0",    "G_rf": "0",    "G_of": "0",    "G_dh": "0",    "G_ph": "0",    "G_pr": "0"  }]No. of records udpated: 2CSV Test7 (Records after udpate_by_template =  [  {    "yearID": "2009",    "teamID": "SEA",    "lgID": "AL",    "playerID": "aardsda01",    "G_all": "100",    "GS": "0",    "G_batting": "9",    "G_defense": "100",    "G_p": "100",    "G_c": "0",    "G_1b": "0",    "G_2b": "0",    "G_3b": "0",    "G_ss": "0",    "G_lf": "0",    "G_cf": "0",    "G_rf": "0",    "G_of": "0",    "G_dh": "0",    "G_ph": "0",    "G_pr": "0"  },  {    "yearID": "2010",    "teamID": "SEA",    "lgID": "AL",    "playerID": "aardsda01",    "G_all": "100",    "GS": "0",    "G_batting": "9",    "G_defense": "100",    "G_p": "100",    "G_c": "0",    "G_1b": "0",    "G_2b": "0",    "G_3b": "0",    "G_ss": "0",    "G_lf": "0",    "G_cf": "0",    "G_rf": "0",    "G_of": "0",    "G_dh": "0",    "G_ph": "0",    "G_pr": "0"  }]This is the correct answer******************** test_update_by_template ********************## TEST 7b: Test Case to validate update by template to existing PK values******************** update_by_template to existing PK Values ********************Template: {  "playerID": "aardsda01",  "teamID": "SEA",  "yearID": "2009"}New Values: {  "teamID": "BOS",  "yearID": "2008"}CSV Test7b: Exception in update_by_template=   Error - Primary key already exists with the updated valuesThis is the correct answer******************** test_update_by_template to existing PK Values ********************## TEST 8: Test Case to validate update by primary key******************** update_by_key ********************Keys: ['aardsda01', 'BOS', '2008']New Values: {  "G_all": "240",  "G_batting": "30",  "G_defense": "240",  "G_p": "30"}Expected no. of records to update: 1CSV Test8 (Records before udpate_by_key =  [  {    "yearID": "2008",    "teamID": "BOS",    "lgID": "AL",    "playerID": "aardsda01",    "G_all": "47",    "GS": "0",    "G_batting": "5",    "G_defense": "47",    "G_p": "47",    "G_c": "0",    "G_1b": "0",    "G_2b": "0",    "G_3b": "0",    "G_ss": "0",    "G_lf": "0",    "G_cf": "0",    "G_rf": "0",    "G_of": "0",    "G_dh": "0",    "G_ph": "0",    "G_pr": "0"  }]No. of records udpated: 1CSV Test8 (Records after udpate_by_key =  [  {    "yearID": "2008",    "teamID": "BOS",    "lgID": "AL",    "playerID": "aardsda01",    "G_all": "240",    "GS": "0",    "G_batting": "30",    "G_defense": "240",    "G_p": "30",    "G_c": "0",    "G_1b": "0",    "G_2b": "0",    "G_3b": "0",    "G_ss": "0",    "G_lf": "0",    "G_cf": "0",    "G_rf": "0",    "G_of": "0",    "G_dh": "0",    "G_ph": "0",    "G_pr": "0"  }]This is the correct answer******************** test_update_by_key ********************## TEST 8b: Test Case to validate update by primary key to an  another existing  key; It should raise an exception******************** update_by_key to existing PK Values ********************Keys: ['aardsda01', 'BOS', '2008']New Values: {  "G_all": "240",  "yearID": "2009",  "teamID": "SEA",  "G_batting": "30",  "G_defense": "240",  "G_p": "30"}Expected no. of records to update: 1CSV Test8b: Exception in update_by_key =   Error - Primary key already exists with the updated valuesThis is the correct answer******************** test_update_by_key to existing PK Values ********************##TEST 9: Optional test script for Save; Also checked that the file on disk is reflected with new values******************** test_save_file to disk ********************Records before udpate_by_key =  [  {    "franchID": "WST",    "franchName": "Washington Statesmen",    "active": "N",    "NAassoc": ""  }]No. of records updated: 1Records after udpate_by_key =  [  {    "franchID": "WST",    "franchName": "Washington Statesmen",    "active": "N",    "NAassoc": "UPD"  }]Records from saved file =  [  {    "franchID": "WST",    "franchName": "Washington Statesmen",    "active": "N",    "NAassoc": "UPD"  }]If the NAassoc is reflected as 'UPD', the save file is working fineThis is the correct answer******************** end test_save_file to disk ********************